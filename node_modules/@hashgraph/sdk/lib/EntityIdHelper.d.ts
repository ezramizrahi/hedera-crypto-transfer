/**
 * @typedef {object} IEntityId
 * @property {number | Long} num
 * @property {(number | Long)=} shard
 * @property {(number | Long)=} realm
 */
/**
 * @param {number | Long | IEntityId} props
 * @param {(number | null | Long)=} realm
 * @param {(number | null | Long)=} num
 * @returns {[Long, Long, Long]}
 */
export function constructor(props: number | Long | IEntityId, realm?: (number | null | Long) | undefined, num?: (number | null | Long) | undefined): [Long, Long, Long];
/**
 * @param {string} text
 * @returns {[Long, Long, Long]}
 */
export function fromString(text: string): [Long, Long, Long];
/**
 * @param {string} address
 * @returns {[Long, Long, Long]}
 */
export function fromSolidityAddress(address: string): [Long, Long, Long];
export type IEntityId = {
    num: number | Long;
    shard?: (number | Long) | undefined;
    realm?: (number | Long) | undefined;
};
import Long from "long";
