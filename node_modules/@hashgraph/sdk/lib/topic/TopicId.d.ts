/**
 * @typedef {import("long").Long} Long
 */
/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ITopicID} proto.ITopicID
 */
/**
 * Unique identifier for a topic (used by the consensus service).
 */
export default class TopicId {
    /**
     * @param {string} text
     * @returns {TopicId}
     */
    static fromString(text: string): TopicId;
    /**
     * @param {proto.ITopicID} id
     * @returns {TopicId}
     */
    static _fromProtobuf(id: proto.ITopicID): TopicId;
    /**
     * @param {Uint8Array} bytes
     * @returns {TopicId}
     */
    static fromBytes(bytes: Uint8Array): TopicId;
    /**
     * @param {number | Long | import("../EntityIdHelper.js").IEntityId} props
     * @param {(number | Long)=} realm
     * @param {(number | Long)=} num
     */
    constructor(props: number | Long | import("../EntityIdHelper.js").IEntityId, realm?: (number | Long) | undefined, num?: (number | Long) | undefined);
    shard: import("long").Long;
    realm: import("long").Long;
    num: import("long").Long;
    /**
     * @override
     * @returns {proto.ITopicID}
     */
    _toProtobuf(): proto.ITopicID;
    /**
     * @override
     * @returns {string}
     */
    toString(): string;
    /**
     * @returns {Uint8Array}
     */
    toBytes(): Uint8Array;
}
export type Long = import("long").Long;
export namespace proto {
    type ITopicID = import("@hashgraph/proto/lib/proto").proto.ITopicID;
}
