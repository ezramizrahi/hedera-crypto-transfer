"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ScheduleId = _interopRequireDefault(require("./ScheduleId.cjs"));

var _AccountId = _interopRequireDefault(require("../account/AccountId.cjs"));

var _protobuf = require("../cryptography/protobuf.cjs");

var _Timestamp = _interopRequireDefault(require("../Timestamp.cjs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").IScheduleInfo} proto.IScheduleInfo
 * @typedef {import("@hashgraph/proto").IScheduleID} proto.IScheduleID
 * @typedef {import("@hashgraph/proto").ITimestamp} proto.ITimestamp
 * @typedef {import("@hashgraph/proto").IAccountID} proto.IAccountID
 * @typedef {import("@hashgraph/proto").IKey} proto.IKey
 * @typedef {import("@hashgraph/proto").IDuration} proto.IDuration
 */

/**
 * @typedef {import("@hashgraph/cryptography").Key} Key
 * @typedef {import("@hashgraph/cryptography").KeyList} KeyList
 */

/**
 * Response when the client sends the node ScheduleGetInfoQuery.
 */
class ScheduleInfo {
  /**
   * @private
   * @param {object} props
   * @param {ScheduleId} props.scheduleId;
   * @param {?AccountId} props.creatorAccountID;
   * @param {?AccountId} props.payerAccountID;
   * @param {?Uint8Array} props.transactionBody;
   * @param {?Key} props.adminKey
   * @param {?KeyList} props.signatories;
   * @param {?string} props.memo;
   * @param {?Timestamp} props.expirationTime;
   */
  constructor(props) {
    /**
     *
     * @readonly
     */
    this.scheduleID = props.scheduleId;
    /**
     *
     * @readonly
     */

    this.creatorAccountID = props.creatorAccountID;
    /**
     *
     * @readonly
     */

    this.payerAccountID = props.payerAccountID;
    /**
     *
     * @readonly
     */

    this.transactionBody = props.transactionBody;
    /**
     *
     * @readonly
     */

    this.signatories = props.signatories;
    /**
     *
     * @readonly
     */

    this.memo = props.memo;
    /**
     *
     * @readonly
     */

    this.adminKey = props.adminKey != null ? props.adminKey : null;
    /**
     *
     * @readonly
     */

    this.expirationTime = props.expirationTime;
  }
  /**
   * @internal
   * @param {proto.IScheduleInfo} info
   * @returns {ScheduleInfo}
   */


  static _fromProtobuf(info) {
    return new ScheduleInfo({
      scheduleId: _ScheduleId.default._fromProtobuf(
      /** @type {proto.IScheduleID} */
      info.scheduleID),
      creatorAccountID: info.creatorAccountID != null ? _AccountId.default._fromProtobuf(
      /** @type {proto.IAccountID} */
      info.creatorAccountID) : null,
      payerAccountID: info.payerAccountID != null ? _AccountId.default._fromProtobuf(
      /** @type {proto.IAccountID} */
      info.payerAccountID) : null,
      transactionBody: info.transactionBody != null ? info.transactionBody : null,
      adminKey: info.adminKey != null ? (0, _protobuf.keyFromProtobuf)(info.adminKey) : null,
      signatories: info.signatories != null ? (0, _protobuf.keyListFromProtobuf)(info.signatories) : null,
      memo: info.memo != null ? info.memo : null,
      expirationTime: info.expirationTime != null ? _Timestamp.default._fromProtobuf(
      /** @type {proto.ITimestamp} */
      info.expirationTime) : null
    });
  }
  /**
   * @returns {proto.IScheduleInfo}
   */


  _toProtobuf() {
    return {
      scheduleID: this.scheduleID != null ? this.scheduleID._toProtobuf() : null,
      creatorAccountID: this.creatorAccountID != null ? this.creatorAccountID._toProtobuf() : null,
      payerAccountID: this.payerAccountID != null ? this.payerAccountID._toProtobuf() : null,
      transactionBody: this.transactionBody != null ? this.transactionBody : new Uint8Array(0),
      adminKey: this.adminKey != null ? (0, _protobuf.keyToProtobuf)(this.adminKey) : null,
      signatories: this.signatories != null ? (0, _protobuf.keyListToProtobuf)(this.signatories) : null,
      memo: this.memo != null ? this.memo : "",
      expirationTime: this.expirationTime != null ? this.expirationTime._toProtobuf() : null
    };
  }

}

exports.default = ScheduleInfo;